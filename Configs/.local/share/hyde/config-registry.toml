# HyDE Configuration Registry
# This file defines applications and their configuration files with hooks
# Test for now


[hyde]
    description = "hyde Script Configuration"
    icon        = "üìù"

[hyde.files.config]
    description = "hyde Configuration File"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/hyde/config.toml"
    post_hook   = [ "bash", "-c", "echo 'HyDE config updated.'" ]
    pre_hook    = [ "bash", "-c", "echo 'Editing hyde config...'" ]

[hyde.files.bookmarks]
    description = "Bookmark Database directory list"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/hyde/bookmarks.list"


[Kitty]
    description = "Kitty Terminal Emulator"
    icon        = "üê±"


# Nested configuration files for kitty
[Kitty.files.main]
    description = "Main Kitty Configuration"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/kitty/kitty.conf"
    post_hook   = [ "bash", "-c", "killall -SIGUSR1 kitty || true" ]
    pre_hook    = [ "bash", "-c", "echo 'Editing Kitty main config...'" ]

[zsh]
    description = "Z Shell Configuration"
    icon        = "üêö"

[zsh.files.zshrc]
    description = "Main Zsh Configuration"
    path = "$ZDOTDIR/.zshrc"
    post_hook = [
        "bash",
        "-c",
        "echo 'Zsh config updated. Restart shell to apply changes.'",
    ]
    pre_hook = [ "bash", "-c", "echo 'Editing .zshrc...'" ]

[zsh.files.user]
    description = "Zsh Aliases"
    path        = "$ZDOTDIR/user.zsh"


[dunst]
    description = "Dunst Notification Daemon"
    icon        = "üîî"

[dunst.files.main]
    description = "Dunst Configuration"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/dunst/dunstrc"
    post_hook   = [ "bash", "-c", "killall dunst && dunst & disown" ]
    pre_hook    = [ "bash", "-c", "echo 'Editing Dunst config...'" ]

[dunst.files.user]
    description = "Dunst Configuration"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/dunst/dunst.conf"
    post_hook   = [ "bash", "-c", "killall dunst && dunst & disown" ]
    pre_hook    = [ "bash", "-c", "echo 'Editing Dunst config...'" ]


[hyprland]
    description = "Hyprland Window Manager"
    icon        = "ü™ü"

[hyprland.files.main]
    description = "Main Hyprland Configuration"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/hypr/userprefs.conf"
    pre_hook    = [ "bash", "-c", "echo 'Editing Hyprland main config...'" ]

[hyprland.files.keybinds]
    description = "Hyprland Keybindings"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/hypr/keybindings.conf"
    pre_hook    = [ "bash", "-c", "echo 'Editing Hyprland keybinds...'" ]

[hyprland.files.windowrules]
    description = "Hyprland Window Rules"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/hypr/windowrules.conf"
    pre_hook    = [ "bash", "-c", "echo 'Editing Hyprland window rules...'" ]

[hyprland.files.nvidia]
    description = "Hyprland NVIDIA Settings"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/hypr/nvidia.conf"
    pre_hook    = [ "bash", "-c", "echo 'Editing Hyprland NVIDIA settings...'" ]


[waybar]
    description = "Waybar Status Bar"
    icon        = "üìä"

[waybar.files.config]
    description = "Waybar Configuration"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/waybar/config.jsonc"
    post_hook   = [ "bash", "-c", "killall waybar && waybar & disown" ]
    pre_hook    = [ "bash", "-c", "echo 'Editing Waybar config...'" ]

[waybar.files.user-style]
    description = "Waybar User style overrides"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/waybar/user-style.css"
    post_hook   = [ "bash", "-c", "killall waybar && waybar & disown" ]
    pre_hook    = [ "bash", "-c", "echo 'Editing Waybar styles...'" ]


[waybar.files.theme-colors]
    description = "Waybar theme colors"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/waybar/theme.css"


[rofi]
    description = "Rofi Application Launcher"
    icon        = "üöÄ"

[rofi.files.config]
    description = "Rofi Configuration"
    path        = "${XDG_CONFIG_HOME:-$HOME/.config}/rofi/config.rasi"
    post_hook   = [ "bash", "-c", "echo 'Rofi config updated.'" ]
    pre_hook    = [ "bash", "-c", "echo 'Editing Rofi config...'" ]

[rofi.files.theme]
    description = "Rofi Theme"
    path = "${XDG_CONFIG_HOME:-$HOME/.config}/rofi/themes/current.rasi"
    post_hook = [ "bash", "-c", "echo 'Rofi theme updated.'" ]
    pre_hook = [
        "bash",
        "-c",
        "mkdir -p ${XDG_CONFIG_HOME:-$HOME/.config}/rofi/themes",
    ]
